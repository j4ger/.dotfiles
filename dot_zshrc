# path configs
path+=~/.local/bin
path+=~/.local/n/bin
path+=~/.yarn/bin
path+=~/.cargo/bin
path+=~/go/bin

export PATH

# history config
export HISTFILE=~/.zsh_history
export HISTSIZE=10000
export SAVEHIST=10000
setopt appendhistory

# default applications
# export EDITOR="neovide --multigrid"
export EDITOR="nvim"
export BROWSER="firefox"

# asdf version manager
. /opt/asdf-vm/asdf.sh

# start sheldon plugin manager
eval "$(sheldon source)"

# setup completion but only do compinit once per day
autoload -Uz compinit 
if [[ -n ${ZDOTDIR}/.zcompdump(#qN.mh+24) ]]; then
	compinit;
else
	compinit -C;
fi;

# load thefuck support
zsh-defer -c 'eval "$(thefuck --alias)"'

# start starship prompt
eval "$(starship init zsh)"

# start zoxide
zsh-defer -c 'eval "$(zoxide init zsh)"'

# configure fzf to use fd
export FZF_DEFAULT_OPS="--preview 'pistol {}'"
export FZF_DEFAULT_COMMAND="fd --type f"

# batcat theme
export BAT_THEME="gruvbox-dark"

# aliases
## navigation
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."

## utilities
alias cat="bat"
alias grep="rg"
alias g="git"
alias lg="lazygit"
alias mkdir="mkdir -p"
alias chmox="chmod +x"
alias gp="git push"
alias gf="git fetch"
alias gc="git commit -m"
alias ga="git add"
alias cz="chezmoi"
alias rr="ranger_cd"
alias x='cd "$(xplr --print-pwd-as-result)"'
alias ls='exa --icons --long --no-permissions --no-user'

# neovide multigrid support
alias neovide="neovide --multigrid"
alias gn="goneovim"
alias v="goneovim ."
alias vim="nvim"

# nnn plugins
export NNN_FIFO=/tmp/nnn.fifo
export NNN_PLUG='d:dragdrop;s:!qrcp $nnn;r:!qrcp receive;q:preview-tui;e:suedit;w:wallpaper;p:rsynccp;c:!wl-copy < $nnn;'

# nnn quit_cd
# source: https://github.com/jarun/nnn/blob/master/misc/quitcd/quitcd.bash_zsh
nn ()
{
    # Block nesting of nnn in subshells
    if [ -n $NNNLVL ] && [ "${NNNLVL:-0}" -ge 1 ]; then
        echo "nnn is already running"
        return
    fi

    # The behaviour is set to cd on quit (nnn checks if NNN_TMPFILE is set)
    # If NNN_TMPFILE is set to a custom path, it must be exported for nnn to
    # see. To cd on quit only on ^G, remove the "export" and make sure not to
    # use a custom path, i.e. set NNN_TMPFILE *exactly* as follows:
    #     NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"
    export NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"

    # Unmask ^Q (, ^V etc.) (if required, see `stty -a`) to Quit nnn
    # stty start undef
    # stty stop undef
    # stty lwrap undef
    # stty lnext undef

    nnn "$@"

    if [ -f "$NNN_TMPFILE" ]; then
            . "$NNN_TMPFILE"
            rm -f "$NNN_TMPFILE" > /dev/null
    fi
}

tere() {
    local result=$(command tere "$@")
    [ -n "$result" ] && cd -- "$result"
}

ranger_cd() {
    temp_file="$(mktemp -t "ranger_cd.XXXXXXXXXX")"
    ranger --choosedir="$temp_file" -- "${@:-$PWD}"
    if chosen_dir="$(cat -- "$temp_file")" && [ -n "$chosen_dir" ] && [ "$chosen_dir" != "$PWD" ]; then
        cd -- "$chosen_dir"
    fi
    rm -f -- "$temp_file"
}


# This script was automatically generated by the broot program
# More information can be found in https://github.com/Canop/broot
# This function starts broot and executes the command
# it produces, if any.
# It's needed because some shell commands, like `cd`,
# have no useful effect if executed in a subshell.
function br {
    local cmd cmd_file code
    cmd_file=$(mktemp)
    if broot --outcmd "$cmd_file" "$@"; then
        cmd=$(<"$cmd_file")
        rm -f "$cmd_file"
        eval "$cmd"
    else
        code=$?
        rm -f "$cmd_file"
        return "$code"
    fi
}

# mcfly init
export MCFLY_KEY_SCHEME=vim
export MCFLY_FUZZY=2
zsh-defer -c 'eval "$(mcfly init zsh)"'
